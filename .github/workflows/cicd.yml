name: CI/CD Build

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - '**'

jobs:
  test-js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ./js-src/node_modules
          key: modules-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('package.json', 'package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cd js-src && npm install
      - name: Run unit and integration tests
        run: cd js-src && npm run test:unit-integration-ci
      - name: Run end-to-end tests
        run: cd js-src && npm run test:e2e
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results-js
          path: js-src/test-results/
          retention-days: 7
          if-no-files-found: error
      - name: Report JS build to Ketryx
        uses: Ketryx/ketryx-github-action@v1
        if: success() || failure()
        with:
          ketryx-url: ${{ vars.KETRYX_URL }}
          project: ${{ vars.KETRYX_PROJECT }}
          api-key: ${{ secrets.KETRYX_API_KEY }}
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-name: ci-js
          test-junit-path: js-src/test-results/jest-junit.xml
          test-cucumber-path: js-src/test-results/cucumber-report.json

  test-java:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin
          architecture: x64
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.6'
      - name: Run Java unit tests
        working-directory: java-src
        run: ./gradlew test
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results-java
          path: java-src/build/test-results/test/
          retention-days: 7
          if-no-files-found: error
      - name: Report Java build to Ketryx
        uses: Ketryx/ketryx-github-action@v1
        if: success() || failure()
        with:
          ketryx-url: ${{ vars.KETRYX_URL }}
          project: ${{ vars.KETRYX_PROJECT }}
          api-key: ${{ secrets.KETRYX_API_KEY }}
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-name: ci-java
          test-junit-path: java-src/build/test-results/test/*.xml

  test-cpp:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache APT packages
        id: cache-apt
        uses: actions/cache@v3
        with:
          path: /var/cache/apt
          key: ${{ runner.os }}-apt-cache
          restore-keys: |
            ${{ runner.os }}-apt-cache
      - name: Cache APT lists
        id: cache-apt-lists
        uses: actions/cache@v3
        with:
          path: /var/lib/apt/lists
          key: ${{ runner.os }}-apt-lists
          restore-keys: |
            ${{ runner.os }}-apt-lists
      - name: Install cmake
        run: sudo apt update && sudo apt install cmake -y
      - name: Use cmake
        run: cmake --version
      - name: Run C++ unit tests
        working-directory: cpp-src
        run: |
          mkdir build -p
          cd build
          cmake ..
          cmake --build .
          ./cpp_sorter_test --gtest_output=xml
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: test-results-cpp
          path: cpp-src/build/*.xml
          retention-days: 7
          if-no-files-found: error
      - name: Report C++ build to Ketryx
        uses: Ketryx/ketryx-github-action@v1
        if: success() || failure()
        with:
          ketryx-url: ${{ vars.KETRYX_URL }}
          project: ${{ vars.KETRYX_PROJECT }}
          api-key: ${{ secrets.KETRYX_API_KEY }}
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-name: ci-cpp
          test-junit-path: cpp-src/build/*.xml

  create-sbom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: ./go-src/
          format: spdx-json
          output-file: sbom.spdx.json
      - name: Report SPDX SBOM to Ketryx
        uses: Ketryx/ketryx-github-action@v1
        if: success() || failure()
        with:
          ketryx-url: ${{ vars.KETRYX_URL }}
          project: ${{ vars.KETRYX_PROJECT }}
          api-key: ${{ secrets.KETRYX_API_KEY }}
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-name: ci-sbom
          spdx-json-path: |
                sbom.spdx.json

  check-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check version status in Ketryx
        uses: Ketryx/ketryx-github-action@v1
        if: success() || failure()
        with:
          ketryx-url: ${{ vars.KETRYX_URL }}
          project: ${{ vars.KETRYX_PROJECT }}
          api-key: ${{ secrets.KETRYX_API_KEY }}
          commit-sha: ${{ github.event.pull_request.head.sha || github.sha }}
          build-name: check-pr
          check-release-status: true
